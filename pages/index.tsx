import { useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";

import {
  Container,
  SimpleGrid,
  useColorMode,
  useColorModeValue,
  IconButton,
  Flex,
} from "@chakra-ui/react";
import { MoonIcon, SunIcon, HamburgerIcon } from "@chakra-ui/icons";
import Hero from "../components/hero";
import { BlogItem } from "../components/blog-item";
import { getAllPostsForHome, getLatestVideos } from "../lib/api";

export async function getStaticProps({ preview = false }) {
  const allPosts = await getAllPostsForHome().catch(console.error);
  const videoData = await getLatestVideos().catch(console.error);

  return {
    props: {
      allPosts: allPosts?.data || [],
      preview,
      latestVideos: videoData?.items || [],
    },
    // Next.js will attempt to re-generate the page:
    // - When a request comes in
    // - At most once every second
    revalidate: 86400, // In seconds,
  };
}

const YouTubeVideo = ({ video }: { video: any }) => {
  return (
    <iframe
      width="560"
      height="315"
      title={video.snippet.title}
      src={`https://www.youtube.com/embed/${video.id.videoId}`}
      frameBorder="0"
      allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
      allowFullScreen
    />
  );
};

const Home: NextPage<{ allPosts: any[]; latestVideos: any[] }> = ({
  allPosts,
  latestVideos,
}) => {
  const [showMenu, toggleShowMenu] = useState(false);
  const { toggleColorMode, colorMode } = useColorMode();

  const heroPost = allPosts[0]?.attributes;
  const morePosts = allPosts.slice(1);
  const latestVideo = latestVideos[0];

  const toggleMenu = () => {
    toggleShowMenu((prev) => !prev);
  };

  return (
    <>
      <Flex
        justifyContent="flex-end"
        zIndex={1}
        top={0}
        left={0}
        right={0}
        height={45}
        width="100%"
        position="sticky"
        paddingRight={45}
      >
        <IconButton
          onClick={toggleColorMode}
          aria-label="Toggle Color Mode"
          variant="ghost"
          icon={colorMode === "dark" ? <MoonIcon /> : <SunIcon />}
          color={useColorModeValue("gray.500", "gray.50")}
        />
      </Flex>
      <Container maxW={"7xl"}>
        <Head>
          <title>Rah.codes</title>
          <meta name="description" content="Generated by Rahsheen Porter" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Hero details={latestVideo.snippet.description}>
          <YouTubeVideo video={latestVideo} />
        </Hero>
        <SimpleGrid minChildWidth="120px" spacing="4vmin">
          {allPosts.length ? (
            allPosts.map(({ attributes }) => {
              return <BlogItem key={attributes.slug} post={attributes} />;
            })
          ) : (
            <h2>This Blog Sucks!</h2>
          )}
        </SimpleGrid>
      </Container>
    </>
  );
};

export default Home;
